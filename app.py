# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-z22qUc2IyYdiDBK3GNwyHyUZZwyVAEv
"""

import streamlit as st
import pandas as pd
import numpy as np
import joblib
from sklearn.preprocessing import StandardScaler

# Load the trained model
model = joblib.load('random_forest_model.pkl')

# Function to preprocess user input
def preprocess_input(data):
    # Perform the same preprocessing steps as during training
    scaler = StandardScaler()
    data_scaled = scaler.fit_transform(data)
    return pd.DataFrame(data_scaled, columns=data.columns)

# Streamlit app layout
st.title("ICCU Bank Credit Risk Prediction App")

st.header("Enter Borrower Information:")

# User input fields
gender = st.selectbox("Gender", options=["Male", "Female"])
age = st.number_input("Age", min_value=18, max_value=100, value=30)
debt = st.number_input("Debt", min_value=0.0, max_value=100.0, value=0.0)
marital_status = st.selectbox("Marital Status", options=["Single", "Married", "Divorced"])
bank_customer = st.selectbox("Bank Customer", options=["Yes", "No"])
education_level = st.selectbox("Education Level", options=["High School", "Bachelor", "Master", "PhD"])
ethnicity = st.selectbox("Ethnicity", options=["White", "Black", "Asian", "Hispanic", "Other"])
years_employed = st.number_input("Years Employed", min_value=0.0, max_value=50.0, value=0.0)
prior_default = st.selectbox("Prior Default", options=["Yes", "No"])
employed = st.selectbox("Employed", options=["Yes", "No"])
credit_score = st.number_input("Credit Score", min_value=0, max_value=1000, value=500)
drivers_license = st.selectbox("Driver's License", options=["Yes", "No"])
citizen = st.selectbox("Citizen", options=["Citizen", "Non-Citizen"])
zip_code = st.text_input("Zip Code", value="00000")
income = st.number_input("Income", min_value=0, max_value=1000000, value=50000)

# Organize user input into a DataFrame
input_data = pd.DataFrame({
    'Gender': [gender],
    'Age': [age],
    'Debt': [debt],
    'Marital_Status': [marital_status],
    'Bank_Customer': [bank_customer],
    'Education_Level': [education_level],
    'Ethnicity': [ethnicity],
    'Years_Employed': [years_employed],
    'Prior_Default': [prior_default],
    'Employed': [employed],
    'Credit_Score': [credit_score],
    'Drivers_License': [drivers_license],
    'Citizen': [citizen],
    'Zip_Code': [zip_code],
    'Income': [income]
})

# Preprocess the input data
input_data_encoded = pd.get_dummies(input_data)
input_data_encoded = preprocess_input(input_data_encoded)

# Make a prediction when the user clicks the button
if st.button("Predict"):
    prediction = model.predict(input_data_encoded)
    prediction_proba = model.predict_proba(input_data_encoded)

    if prediction[0] == 1:
        st.success(f"Credit Approved with a probability of {prediction_proba[0][1]:.2f}")
    else:
        st.error(f"Credit Not Approved with a probability of {prediction_proba[0][0]:.2f}")